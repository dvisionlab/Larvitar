import{_ as n,c as s,a as e,o as t}from"./app-6pbiA5b1.js";const p={};function i(r,a){return t(),s("div",null,a[0]||(a[0]=[e(`<div style="text-align:center;"><img src="https://assets.pokemon.com/assets/cms2/img/pokedex/full/246.png" alt="Larvitar" height="200"></div><h2 id="layers-module" tabindex="-1"><a class="header-anchor" href="#layers-module"><span>Layers Module</span></a></h2><p>The Layers module in Larvitar provides a powerful way to manage and manipulate multiple layers of DICOM images. This allows for advanced visualization techniques, such as blending different imaging modalities or applying custom color maps for enhanced contrast.</p><p>For more details on each method and additional options, refer to the specific API documentation sections on Layer Management, Rendering, and Interaction.</p><h3 id="key-features" tabindex="-1"><a class="header-anchor" href="#key-features"><span>Key Features</span></a></h3><p>The Layers module is designed to facilitate handling multiple image layers efficiently. Before using the Layers module, ensure that you have initialized the library.</p><ul><li><p><strong>Creating Layers:</strong> Layers can be created from a series of images, allowing for multiple overlays within the same viewport.</p></li><li><p><strong>Managing Layers:</strong> The module supports switching between layers, adjusting opacity, and modifying rendering properties dynamically.</p></li><li><p><strong>Rendering Layers:</strong> Layers are rendered separately and can be combined using blending techniques.</p></li><li><p><strong>Interaction Support:</strong> Users can toggle layers, change their visibility, and adjust transparency interactively.</p></li><li><p><strong>Use Cases:</strong> The Layers module is particularly useful in scenarios such as CT-MR overlay, where combining different imaging modalities can enhance clinical diagnosis and visualization.</p></li></ul><h3 id="example-creating-and-rendering-layers" tabindex="-1"><a class="header-anchor" href="#example-creating-and-rendering-layers"><span>Example: Creating and Rendering Layers</span></a></h3><p>To create and render a layer, you can use the buildLayer function and associate it with a series of images:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">let</span> layer_1 <span class="token operator">=</span> larvitar<span class="token punctuation">.</span><span class="token function">buildLayer</span><span class="token punctuation">(</span>serie_1<span class="token punctuation">,</span> <span class="token string">&quot;main&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> layer_2 <span class="token operator">=</span> larvitar<span class="token punctuation">.</span><span class="token function">buildLayer</span><span class="token punctuation">(</span>serie_2<span class="token punctuation">,</span> <span class="token string">&quot;colored&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  opacity<span class="token operator">:</span> <span class="token number">0.25</span><span class="token punctuation">,</span></span>
<span class="line">  colormap<span class="token operator">:</span> <span class="token string">&quot;hotIron&quot;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Once layers are created, they can be rendered using:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line">larvitar<span class="token punctuation">.</span><span class="token function">renderImage</span><span class="token punctuation">(</span>serie_1<span class="token punctuation">,</span> <span class="token string">&quot;viewer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  larvitar<span class="token punctuation">.</span><span class="token function">renderImage</span><span class="token punctuation">(</span>serie_2<span class="token punctuation">,</span> <span class="token string">&quot;viewer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="managing-layers" tabindex="-1"><a class="header-anchor" href="#managing-layers"><span>Managing Layers</span></a></h3><p>You can dynamically switch between layers and modify their properties, such as opacity:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">let</span> activeLayer <span class="token operator">=</span> larvitar<span class="token punctuation">.</span><span class="token function">getActiveLayer</span><span class="token punctuation">(</span><span class="token string">&quot;viewer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> newOpacity <span class="token operator">=</span></span>
<span class="line">  activeLayer<span class="token punctuation">.</span>options<span class="token punctuation">.</span>opacity <span class="token operator">==</span> <span class="token number">1.0</span> <span class="token operator">?</span> <span class="token number">0.0</span> <span class="token operator">:</span> activeLayer<span class="token punctuation">.</span>options<span class="token punctuation">.</span>opacity <span class="token operator">+</span> <span class="token number">0.25</span><span class="token punctuation">;</span></span>
<span class="line">larvitar<span class="token punctuation">.</span><span class="token function">updateLayer</span><span class="token punctuation">(</span><span class="token string">&quot;viewer&quot;</span><span class="token punctuation">,</span> activeLayer<span class="token punctuation">.</span>layerId<span class="token punctuation">,</span> <span class="token punctuation">{</span> opacity<span class="token operator">:</span> newOpacity <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="api-reference" tabindex="-1"><a class="header-anchor" href="#api-reference"><span>API Reference</span></a></h2><h3 id="buildlayer" tabindex="-1"><a class="header-anchor" href="#buildlayer"><span><code>buildLayer</code></span></a></h3><p>Build the image layers object</p><h4 id="syntax" tabindex="-1"><a class="header-anchor" href="#syntax"><span>Syntax</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token function">buildLayer</span> <span class="token punctuation">(</span></span>
<span class="line">  series<span class="token operator">:</span> Series<span class="token punctuation">,</span></span>
<span class="line">  tag<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span></span>
<span class="line">  options<span class="token operator">:</span> <span class="token punctuation">{</span> opacity<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> colormap<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token operator">:</span> Layer</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>series</code></td><td>Series</td><td>the series on which the layer is applied</td></tr><tr><td><code>tag</code></td><td>string</td><td>Tag for the layer</td></tr><tr><td><code>options</code></td><td>{ opacity: number; colormap: string }</td><td>layer options {opacity:float, colormap: str}</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>Layer</code> â€“ Cornerstone layer object:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"> <span class="token punctuation">{</span></span>
<span class="line">    imageIds<span class="token operator">:</span> series<span class="token punctuation">.</span>imageIds<span class="token punctuation">,</span></span>
<span class="line">    currentImageIdIndex<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>series<span class="token punctuation">.</span>imageIds<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    options<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      name<span class="token operator">:</span> tag<span class="token punctuation">,</span></span>
<span class="line">      opacity<span class="token operator">:</span> options<span class="token operator">?.</span>opacity <span class="token operator">?</span> options<span class="token operator">?.</span>opacity <span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span></span>
<span class="line">      visible<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">      viewport<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        colormap<span class="token operator">:</span> options<span class="token operator">?.</span>colormap <span class="token operator">?</span> options<span class="token operator">?.</span>colormap <span class="token operator">:</span> <span class="token string">&quot;gray&quot;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="updatelayer" tabindex="-1"><a class="header-anchor" href="#updatelayer"><span><code>updateLayer</code></span></a></h3><p>Change the options of a layer</p><h4 id="syntax-1" tabindex="-1"><a class="header-anchor" href="#syntax-1"><span>Syntax</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token function">updateLayer</span> <span class="token punctuation">(</span></span>
<span class="line">  elementId<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> HTMLElement<span class="token punctuation">,</span></span>
<span class="line">  layerId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span></span>
<span class="line">  options<span class="token operator">:</span> <span class="token punctuation">{</span> opacity<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> colormap<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>elementId</code></td><td>string or HTMLElement</td><td>The html div id or Element used for rendering</td></tr><tr><td><code>layerId</code></td><td>string</td><td>The layer id</td></tr><tr><td><code>options</code></td><td>{ opacity: number; colormap: string }</td><td>layer options {opacity:float, colormap: str}</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>Layer</code> â€“ calls <code>cornerstone.updateImage(element);</code> after setting new layer&#39;s properties</p><h3 id="getactivelayer" tabindex="-1"><a class="header-anchor" href="#getactivelayer"><span><code>getActiveLayer</code></span></a></h3><p>Get the active layer</p><h4 id="syntax-2" tabindex="-1"><a class="header-anchor" href="#syntax-2"><span>Syntax</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token function">getActiveLayer</span> <span class="token punctuation">(</span>elementId<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> HTMLElement<span class="token punctuation">)</span><span class="token operator">:</span> EnabledElementLayer</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>elementId</code></td><td>string or HTMLElement</td><td>The html div id or Element used for rendering</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>EnabledElementLayer</code> â€“ The active layer object</p><h3 id="setactivelayer" tabindex="-1"><a class="header-anchor" href="#setactivelayer"><span><code>setActiveLayer</code></span></a></h3><p>Set the active layer</p><h4 id="syntax-3" tabindex="-1"><a class="header-anchor" href="#syntax-3"><span>Syntax</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token function">setActiveLayer</span> <span class="token punctuation">(</span>elementId<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> HTMLElement<span class="token punctuation">,</span> layerId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h4><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>elementId</code></td><td>string or HTMLElement</td><td>The html div id or Element used for rendering</td></tr><tr><td><code>layerId</code></td><td>string</td><td>The id of the layer</td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h4><p><code>void</code> â€“ calls <code>cornerstone.setActiveLayer(element, layerId);</code></p><p><br></p><div style="text-align:center;"><img src="https://press.r1-it.storage.cloud.it/logo_trasparent.png" alt="D/Vision Lab" height="200"></div>`,51)]))}const o=n(p,[["render",i],["__file","layers.html.vue"]]),c=JSON.parse('{"path":"/api/modules/visualizations/layers.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Layers Module","slug":"layers-module","link":"#layers-module","children":[{"level":3,"title":"Key Features","slug":"key-features","link":"#key-features","children":[]},{"level":3,"title":"Example: Creating and Rendering Layers","slug":"example-creating-and-rendering-layers","link":"#example-creating-and-rendering-layers","children":[]},{"level":3,"title":"Managing Layers","slug":"managing-layers","link":"#managing-layers","children":[]}]},{"level":2,"title":"API Reference","slug":"api-reference","link":"#api-reference","children":[{"level":3,"title":"buildLayer","slug":"buildlayer","link":"#buildlayer","children":[]},{"level":3,"title":"updateLayer","slug":"updatelayer","link":"#updatelayer","children":[]},{"level":3,"title":"getActiveLayer","slug":"getactivelayer","link":"#getactivelayer","children":[]},{"level":3,"title":"setActiveLayer","slug":"setactivelayer","link":"#setactivelayer","children":[]}]}],"git":{"updatedTime":1759672351000,"contributors":[{"name":"Laura Borghesi","username":"Laura Borghesi","email":"146220917+laura-borghesi-lum00n@users.noreply.github.com","commits":1,"url":"https://github.com/Laura Borghesi"}]},"filePathRelative":"api/modules/visualizations/layers.md","excerpt":"<div style=\\"text-align: center;\\">\\n    <img src=\\"https://assets.pokemon.com/assets/cms2/img/pokedex/full/246.png\\" alt=\\"Larvitar\\" height=\\"200\\">\\n</div>\\n<h2>Layers Module</h2>\\n<p>The Layers module in Larvitar provides a powerful way to manage and manipulate multiple layers of DICOM images. This allows for advanced visualization techniques, such as blending different imaging modalities or applying custom color maps for enhanced contrast.</p>"}');export{o as comp,c as data};
