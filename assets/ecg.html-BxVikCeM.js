import{_ as n,c as s,a as e,o as t}from"./app-6pbiA5b1.js";const r={};function i(p,a){return t(),s("div",null,a[0]||(a[0]=[e(`<div style="text-align:center;"><img src="https://assets.pokemon.com/assets/cms2/img/pokedex/full/246.png" alt="Larvitar" height="200"></div><h2 id="ecg-waveform-module" tabindex="-1"><a class="header-anchor" href="#ecg-waveform-module"><span>ECG Waveform Module</span></a></h2><p>The waveforms/ecg module provides utility functions for rendering ECG (Electrocardiogram) waveforms using plotly.js. This enables visualization of ECG data in an interactive and dynamic way, supporting real-time updates and synchronization with imaging data.</p><h3 id="key-features" tabindex="-1"><a class="header-anchor" href="#key-features"><span>Key Features</span></a></h3><ul><li><p><strong>Rendering ECG Data:</strong> Displays ECG waveform data within a given div element.</p></li><li><p><strong>Customizable Layout:</strong> Allows users to specify custom styling, colors, and grid settings.</p></li><li><p><strong>Frame Synchronization:</strong> Supports updating the ECG visualization based on image frame selection.</p></li><li><p><strong>Interactivity:</strong> Enables click and scroll events to adjust the ECG marker position dynamically.</p></li></ul><h3 id="use-cases" tabindex="-1"><a class="header-anchor" href="#use-cases"><span>Use Cases</span></a></h3><p>This module is particularly useful in multi-frame cardiac imaging, where ECG signals are used to correlate different phases of the heart cycle with imaging frames. Some specific applications include:</p><ul><li><strong>Cardiac MRI and CT Analysis:</strong> Synchronizing ECG waveforms with multi-frame DICOM images to visualize heart motion and function.</li><li><strong>Echocardiography Interpretation:</strong> Aligning ultrasound frames with corresponding ECG signals for enhanced cardiac assessment.</li><li><strong>Stress Testing &amp; Holter Monitoring:</strong> Providing real-time ECG overlays on imaging data for evaluating heart function under different conditions.</li><li><strong>AI-Assisted Diagnosis:</strong> Integrating ECG and imaging data for machine learning models in automated arrhythmia or cardiac disease detection.</li></ul><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example:</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> renderECG<span class="token punctuation">,</span> updateECGMarker <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./waveforms/ecg&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> divId <span class="token operator">=</span> <span class="token string">&quot;ecgPlot&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> colorMarker <span class="token operator">=</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> numberOfFrames <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> frameTime <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> frameId <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">renderECG</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> divId<span class="token punctuation">,</span> colorMarker<span class="token punctuation">,</span> numberOfFrames<span class="token punctuation">,</span> frameTime<span class="token punctuation">,</span> frameId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="api-reference" tabindex="-1"><a class="header-anchor" href="#api-reference"><span>API Reference</span></a></h2><h3 id="getdefaultecglayout" tabindex="-1"><a class="header-anchor" href="#getdefaultecglayout"><span><code>getDefaultECGLayout</code></span></a></h3><p>Returns the default layout configuration for the ECG plot, including axis settings, grid styles, and background colors.</p><h4 id="syntax" tabindex="-1"><a class="header-anchor" href="#syntax"><span>Syntax</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token function">getDefaultECGLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>Plotly<span class="token punctuation">.</span>Layout<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>Partial&lt;Plotly.Layout&gt;</code> - The default layout for ECG visualization.</p><h3 id="renderecg" tabindex="-1"><a class="header-anchor" href="#renderecg"><span><code>renderECG</code></span></a></h3><p>Renders an ECG waveform in the specified divId with configurable properties such as color markers and frame synchronization.</p><h4 id="syntax-1" tabindex="-1"><a class="header-anchor" href="#syntax-1"><span>Syntax</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token function">renderECG</span><span class="token punctuation">(</span></span>
<span class="line">  data<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  divId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span></span>
<span class="line">  colorMarker<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span></span>
<span class="line">  numberOfFrames<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span></span>
<span class="line">  frameTime<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span></span>
<span class="line">  frameId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span></span>
<span class="line">  customLayout<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>Plotly<span class="token punctuation">.</span>Layout<span class="token operator">&gt;</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>Plotly<span class="token punctuation">.</span>PlotData<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>data</code></td><td>number[]</td><td>ECG waveform data</td></tr><tr><td><code>divId</code></td><td>string</td><td>DivId to render waveform in</td></tr><tr><td><code>colorMarker</code></td><td>string</td><td>Color of the marker</td></tr><tr><td><code>numberOfFrames</code></td><td>number</td><td>Number of frames in the image</td></tr><tr><td><code>frameTime</code></td><td>number</td><td>Time interval of each frame in the image</td></tr><tr><td><code>frameId</code></td><td>number</td><td>FrameId of the image to be rendered</td></tr><tr><td><code>customLayout</code></td><td>Partial&lt;Plotly.Layout&gt;</td><td>Custom layout for the plotly plot</td></tr></tbody></table><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>Partial&lt;Plotly.PlotData&gt;[]</code> - Plotly trace data</p><h3 id="unrenderecg" tabindex="-1"><a class="header-anchor" href="#unrenderecg"><span><code>unrenderECG</code></span></a></h3><p>Removes the ECG plot from the specified divId.</p><h4 id="syntax-2" tabindex="-1"><a class="header-anchor" href="#syntax-2"><span>Syntax</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token function">renderECG</span><span class="token punctuation">(</span></span>
<span class="line">  divId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>divId</code></td><td>string</td><td>DivId to render waveform in</td></tr></tbody></table><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>void</code> - Calls <code>Plotly.purge(divId);</code></p><h3 id="syncecgframe" tabindex="-1"><a class="header-anchor" href="#syncecgframe"><span><code>syncECGFrame</code></span></a></h3><p>Synchronizes the ECG waveform with image frames, updating marker positions based on user interaction.</p><h4 id="syntax-3" tabindex="-1"><a class="header-anchor" href="#syntax-3"><span>Syntax</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token function">syncECGFrame</span><span class="token punctuation">(</span></span>
<span class="line">  traceData<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>Plotly<span class="token punctuation">.</span>PlotData<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  seriesId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span></span>
<span class="line">  canvasId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span></span>
<span class="line">  numberOfFrames<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span></span>
<span class="line">  divId<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>traceData</code></td><td>Partial&lt;Plotly.PlotData&gt;[]</td><td>ECG trace data</td></tr><tr><td><code>seriesId</code></td><td>string</td><td>The image series ID</td></tr><tr><td><code>canvasId</code></td><td>string</td><td>The canvas ID where the image is displayed</td></tr><tr><td><code>numberOfFrames</code></td><td>number</td><td>Total number of frames in the series</td></tr><tr><td><code>divId</code></td><td>string</td><td>The div where the ECG is rendered</td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h4><p><code>void</code></p><h3 id="updateecgtotaltime" tabindex="-1"><a class="header-anchor" href="#updateecgtotaltime"><span><code>updateECGTotalTime</code></span></a></h3><p>Updates the ECG waveform based on a new total time, adjusting axis ranges accordingly.</p><h4 id="syntax-4" tabindex="-1"><a class="header-anchor" href="#syntax-4"><span>Syntax</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token function">updateECGTotalTime</span><span class="token punctuation">(</span></span>
<span class="line">  traceData<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>Plotly<span class="token punctuation">.</span>PlotData<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  frameId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span></span>
<span class="line">  numberOfFrames<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span></span>
<span class="line">  frameTime<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span></span>
<span class="line">  divId<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h4><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>traceData</code></td><td>Partial&lt;Plotly.PlotData&gt;[]</td><td>ECG trace data</td></tr><tr><td><code>frameId</code></td><td>number</td><td>The current frame index</td></tr><tr><td><code>numberOfFrames</code></td><td>number</td><td>Total number of frames in the series</td></tr><tr><td><code>frameTime</code></td><td>number</td><td>Time interval per frame</td></tr><tr><td><code>divId</code></td><td>string</td><td>The div where the ECG is rendered</td></tr></tbody></table><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4"><span>Returns</span></a></h4><p><code>void</code></p><h3 id="updateecgmarker" tabindex="-1"><a class="header-anchor" href="#updateecgmarker"><span><code>updateECGMarker</code></span></a></h3><p>Updates the position of the ECG marker dynamically when navigating through frames.</p><h4 id="syntax-5" tabindex="-1"><a class="header-anchor" href="#syntax-5"><span>Syntax</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token function">updateECGMarker</span><span class="token punctuation">(</span></span>
<span class="line">  traceData<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>Plotly<span class="token punctuation">.</span>PlotData<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  frameId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span></span>
<span class="line">  numberOfFrames<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span></span>
<span class="line">  frameTime<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span></span>
<span class="line">  divId<span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4"><span>Parameters</span></a></h4><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>traceData</code></td><td>Partial&lt;Plotly.PlotData&gt;[]</td><td>ECG trace data</td></tr><tr><td><code>frameId</code></td><td>number</td><td>The current frame index</td></tr><tr><td><code>numberOfFrames</code></td><td>number</td><td>Total number of frames in the series</td></tr><tr><td><code>divId</code></td><td>string</td><td>The div where the ECG is rendered</td></tr></tbody></table><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5"><span>Returns</span></a></h4><p><code>void</code></p><p><br></p><div style="text-align:center;"><img src="https://press.r1-it.storage.cloud.it/logo_trasparent.png" alt="D/Vision Lab" height="200"></div>`,59)]))}const l=n(r,[["render",i],["__file","ecg.html.vue"]]),d=JSON.parse('{"path":"/api/modules/visualizations/ecg.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"ECG Waveform Module","slug":"ecg-waveform-module","link":"#ecg-waveform-module","children":[{"level":3,"title":"Key Features","slug":"key-features","link":"#key-features","children":[]},{"level":3,"title":"Use Cases","slug":"use-cases","link":"#use-cases","children":[]},{"level":3,"title":"Example:","slug":"example","link":"#example","children":[]}]},{"level":2,"title":"API Reference","slug":"api-reference","link":"#api-reference","children":[{"level":3,"title":"getDefaultECGLayout","slug":"getdefaultecglayout","link":"#getdefaultecglayout","children":[]},{"level":3,"title":"renderECG","slug":"renderecg","link":"#renderecg","children":[]},{"level":3,"title":"unrenderECG","slug":"unrenderecg","link":"#unrenderecg","children":[]},{"level":3,"title":"syncECGFrame","slug":"syncecgframe","link":"#syncecgframe","children":[]},{"level":3,"title":"updateECGTotalTime","slug":"updateecgtotaltime","link":"#updateecgtotaltime","children":[]},{"level":3,"title":"updateECGMarker","slug":"updateecgmarker","link":"#updateecgmarker","children":[]}]}],"git":{"updatedTime":1759672351000,"contributors":[{"name":"Laura Borghesi","username":"Laura Borghesi","email":"146220917+laura-borghesi-lum00n@users.noreply.github.com","commits":1,"url":"https://github.com/Laura Borghesi"}]},"filePathRelative":"api/modules/visualizations/ecg.md","excerpt":"<div style=\\"text-align: center;\\">\\n    <img src=\\"https://assets.pokemon.com/assets/cms2/img/pokedex/full/246.png\\" alt=\\"Larvitar\\" height=\\"200\\">\\n</div>\\n<h2>ECG Waveform Module</h2>\\n<p>The waveforms/ecg module provides utility functions for rendering ECG (Electrocardiogram) waveforms using plotly.js. This enables visualization of ECG data in an interactive and dynamic way, supporting real-time updates and synchronization with imaging data.</p>"}');export{l as comp,d as data};
