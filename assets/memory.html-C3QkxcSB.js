import{_ as a,c as n,a as s,o as t}from"./app-6pbiA5b1.js";const i={};function r(o,e){return t(),n("div",null,e[0]||(e[0]=[s(`<div style="text-align:center;"><img src="https://assets.pokemon.com/assets/cms2/img/pokedex/full/246.png" alt="Larvitar" height="200"></div><h2 id="memory-monitoring-module" tabindex="-1"><a class="header-anchor" href="#memory-monitoring-module"><span>Memory Monitoring Module</span></a></h2><h3 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h3><p>The Memory Monitoring module provides utility functions for tracking and managing memory usage within an application. It ensures efficient memory allocation and prevents excessive usage by monitoring JavaScript heap size and clearing unnecessary data when needed.</p><h2 id="api-reference" tabindex="-1"><a class="header-anchor" href="#api-reference"><span>API Reference</span></a></h2><h3 id="checkandclearmemory" tabindex="-1"><a class="header-anchor" href="#checkandclearmemory"><span><code>checkAndClearMemory</code></span></a></h3><h4 id="description" tabindex="-1"><a class="header-anchor" href="#description"><span>Description</span></a></h4><p>Checks memory allocation and clears non-rendered series from memory if necessary.</p><h4 id="syntax" tabindex="-1"><a class="header-anchor" href="#syntax"><span>Syntax</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token function">checkAndClearMemory</span><span class="token punctuation">(</span>bytes<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> renderedSeriesIds<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>bytes</code></td><td>Number</td><td>The number of bytes to allocate.</td></tr><tr><td><code>renderedSeriesIds</code></td><td>Array of Strings</td><td>List of rendered series IDs.</td></tr></tbody></table><h4 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token function">checkAndClearMemory</span><span class="token punctuation">(</span><span class="token number">50000000</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;series1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;series2&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="checkmemoryallocation" tabindex="-1"><a class="header-anchor" href="#checkmemoryallocation"><span><code>checkMemoryAllocation</code></span></a></h3><h4 id="description-1" tabindex="-1"><a class="header-anchor" href="#description-1"><span>Description</span></a></h4><p>Checks memory allocation and returns <code>false</code> if the JavaScript heap size limit is reached.</p><h4 id="syntax-1" tabindex="-1"><a class="header-anchor" href="#syntax-1"><span>Syntax</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token function">checkMemoryAllocation</span><span class="token punctuation">(</span>bytes<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>bytes</code></td><td>Number</td><td>The number of bytes to allocate.</td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>boolean</code> - <code>true</code> if there is enough memory, <code>false</code> otherwise.</p><h4 id="example-1" tabindex="-1"><a class="header-anchor" href="#example-1"><span>Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">const</span> isEnough <span class="token operator">=</span> <span class="token function">checkMemoryAllocation</span><span class="token punctuation">(</span><span class="token number">50000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="getusedmemory" tabindex="-1"><a class="header-anchor" href="#getusedmemory"><span><code>getUsedMemory</code></span></a></h3><h4 id="description-2" tabindex="-1"><a class="header-anchor" href="#description-2"><span>Description</span></a></h4><p>Retrieves the amount of memory currently used in the JavaScript heap.</p><h4 id="syntax-2" tabindex="-1"><a class="header-anchor" href="#syntax-2"><span>Syntax</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token function">getUsedMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>number</code> - Used JS heap size in bytes, or <code>NaN</code> if unsupported.</p><h4 id="example-2" tabindex="-1"><a class="header-anchor" href="#example-2"><span>Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">const</span> usedMemory <span class="token operator">=</span> <span class="token function">getUsedMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="getavailablememory" tabindex="-1"><a class="header-anchor" href="#getavailablememory"><span><code>getAvailableMemory</code></span></a></h3><h4 id="description-3" tabindex="-1"><a class="header-anchor" href="#description-3"><span>Description</span></a></h4><p>Returns the available JavaScript heap size.</p><h4 id="syntax-3" tabindex="-1"><a class="header-anchor" href="#syntax-3"><span>Syntax</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token function">getAvailableMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>number</code> - Available JS heap size in bytes, or <code>NaN</code> if unsupported.</p><h4 id="example-3" tabindex="-1"><a class="header-anchor" href="#example-3"><span>Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">const</span> availableMemory <span class="token operator">=</span> <span class="token function">getAvailableMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="setavailablememory" tabindex="-1"><a class="header-anchor" href="#setavailablememory"><span><code>setAvailableMemory</code></span></a></h3><h4 id="description-4" tabindex="-1"><a class="header-anchor" href="#description-4"><span>Description</span></a></h4><p>Sets a custom maximum available memory limit.</p><h4 id="syntax-4" tabindex="-1"><a class="header-anchor" href="#syntax-4"><span>Syntax</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token function">setAvailableMemory</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>value</code></td><td>Number</td><td>Memory limit in gigabytes.</td></tr></tbody></table><h4 id="example-4" tabindex="-1"><a class="header-anchor" href="#example-4"><span>Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token function">setAvailableMemory</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="internal-utility-functions" tabindex="-1"><a class="header-anchor" href="#internal-utility-functions"><span>Internal Utility Functions</span></a></h2><h3 id="checkmemorysupport" tabindex="-1"><a class="header-anchor" href="#checkmemorysupport"><span><code>checkMemorySupport</code></span></a></h3><h4 id="description-5" tabindex="-1"><a class="header-anchor" href="#description-5"><span>Description</span></a></h4><p>Checks if <code>performance.memory</code> is supported in the browser.</p><h4 id="syntax-5" tabindex="-1"><a class="header-anchor" href="#syntax-5"><span>Syntax</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token function">checkMemorySupport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h4><p><code>boolean</code> - <code>true</code> if supported, <code>false</code> otherwise.</p><h4 id="example-5" tabindex="-1"><a class="header-anchor" href="#example-5"><span>Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">const</span> isSupported <span class="token operator">=</span> <span class="token function">checkMemorySupport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="getmb" tabindex="-1"><a class="header-anchor" href="#getmb"><span><code>getMB</code></span></a></h3><h4 id="description-6" tabindex="-1"><a class="header-anchor" href="#description-6"><span>Description</span></a></h4><p>Converts bytes to megabytes.</p><h4 id="syntax-6" tabindex="-1"><a class="header-anchor" href="#syntax-6"><span>Syntax</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token function">getMB</span><span class="token punctuation">(</span>bytes<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h4><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>bytes</code></td><td>Number</td><td>Memory in bytes.</td></tr></tbody></table><h4 id="example-6" tabindex="-1"><a class="header-anchor" href="#example-6"><span>Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">const</span> memoryInMB <span class="token operator">=</span> <span class="token function">getMB</span><span class="token punctuation">(</span><span class="token number">1048576</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="constants" tabindex="-1"><a class="header-anchor" href="#constants"><span>Constants</span></a></h2><h3 id="backingmemory" tabindex="-1"><a class="header-anchor" href="#backingmemory"><span><code>backingMemory</code></span></a></h3><ul><li>A constant defining 100 MB (<code>100 * 1048576</code>) reserved memory.</li></ul><h3 id="custommemorylimit" tabindex="-1"><a class="header-anchor" href="#custommemorylimit"><span><code>customMemoryLimit</code></span></a></h3><ul><li>A variable that stores the user-defined memory limit.</li></ul><h2 id="dependencies" tabindex="-1"><a class="header-anchor" href="#dependencies"><span>Dependencies</span></a></h2><ul><li><code>getImageManager()</code>, <code>removeDataFromImageManager()</code>, <code>clearImageCache()</code>, and <code>store</code> from external modules.</li></ul><h2 id="warnings-considerations" tabindex="-1"><a class="header-anchor" href="#warnings-considerations"><span>Warnings &amp; Considerations</span></a></h2><ul><li>This module ensures efficient memory management, preventing excessive memory usage.</li><li>Works only in browsers that support <code>performance.memory</code> (Chrome-based browsers).</li></ul><p><br></p><div style="text-align:center;"><img src="https://press.r1-it.storage.cloud.it/logo_trasparent.png" alt="D/Vision Lab" height="200"></div>`,89)]))}const c=a(i,[["render",r],["__file","memory.html.vue"]]),p=JSON.parse('{"path":"/api/modules/utilities/memory.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Memory Monitoring Module","slug":"memory-monitoring-module","link":"#memory-monitoring-module","children":[{"level":3,"title":"Overview","slug":"overview","link":"#overview","children":[]}]},{"level":2,"title":"API Reference","slug":"api-reference","link":"#api-reference","children":[{"level":3,"title":"checkAndClearMemory","slug":"checkandclearmemory","link":"#checkandclearmemory","children":[]},{"level":3,"title":"checkMemoryAllocation","slug":"checkmemoryallocation","link":"#checkmemoryallocation","children":[]},{"level":3,"title":"getUsedMemory","slug":"getusedmemory","link":"#getusedmemory","children":[]},{"level":3,"title":"getAvailableMemory","slug":"getavailablememory","link":"#getavailablememory","children":[]},{"level":3,"title":"setAvailableMemory","slug":"setavailablememory","link":"#setavailablememory","children":[]}]},{"level":2,"title":"Internal Utility Functions","slug":"internal-utility-functions","link":"#internal-utility-functions","children":[{"level":3,"title":"checkMemorySupport","slug":"checkmemorysupport","link":"#checkmemorysupport","children":[]},{"level":3,"title":"getMB","slug":"getmb","link":"#getmb","children":[]}]},{"level":2,"title":"Constants","slug":"constants","link":"#constants","children":[{"level":3,"title":"backingMemory","slug":"backingmemory","link":"#backingmemory","children":[]},{"level":3,"title":"customMemoryLimit","slug":"custommemorylimit","link":"#custommemorylimit","children":[]}]},{"level":2,"title":"Dependencies","slug":"dependencies","link":"#dependencies","children":[]},{"level":2,"title":"Warnings & Considerations","slug":"warnings-considerations","link":"#warnings-considerations","children":[]}],"git":{"updatedTime":1759672351000,"contributors":[{"name":"Laura Borghesi","username":"Laura Borghesi","email":"146220917+laura-borghesi-lum00n@users.noreply.github.com","commits":1,"url":"https://github.com/Laura Borghesi"}]},"filePathRelative":"api/modules/utilities/memory.md","excerpt":"<div style=\\"text-align: center;\\">\\n    <img src=\\"https://assets.pokemon.com/assets/cms2/img/pokedex/full/246.png\\" alt=\\"Larvitar\\" height=\\"200\\">\\n</div>\\n<h2>Memory Monitoring Module</h2>\\n<h3>Overview</h3>\\n<p>The Memory Monitoring module provides utility functions for tracking and managing memory usage within an application. It ensures efficient memory allocation and prevents excessive usage by monitoring JavaScript heap size and clearing unnecessary data when needed.</p>"}');export{c as comp,p as data};
