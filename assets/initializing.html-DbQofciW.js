import{_ as i,c as s,a as n,b as o,d as t,e as l,f as r,r as d,o as c}from"./app-6pbiA5b1.js";const p={};function u(m,e){const a=d("RouteLink");return c(),s("div",null,[e[3]||(e[3]=n(`<div style="text-align:center;"><img src="https://assets.pokemon.com/assets/cms2/img/pokedex/full/246.png" alt="Larvitar" height="200"></div><h2 id="initializing-the-image-loader-s" tabindex="-1"><a class="header-anchor" href="#initializing-the-image-loader-s"><span>Initializing the Image Loader(s)</span></a></h2><p>Before loading and rendering DICOM images, you must initialize the image loader using the <code>initializeImageLoader</code> function. This function configures the <strong>DICOMImageLoader</strong>, allowing you to specify parameters such as the maximum concurrency for decoding operations, which controls how many tasks can run simultaneously.</p><h3 id="initialization-function" tabindex="-1"><a class="header-anchor" href="#initialization-function"><span>Initialization Function</span></a></h3><p><strong><code>initializeImageLoader(maxConcurrency?: number): void</code></strong><br> Initializes the DICOM image loader and optionally sets the maximum concurrency for image decoding tasks.</p><ul><li><strong><code>maxConcurrency</code></strong>: (optional) Specifies the maximum number of concurrent decoding tasks. Defaults to the number of CPU cores -1 if not provided.</li></ul><hr><h3 id="example-initialization" tabindex="-1"><a class="header-anchor" href="#example-initialization"><span>Example Initialization</span></a></h3><p>Hereâ€™s an example of how to initialize the image loader and configure the maximum concurrency:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> initializeImageLoader <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;larvitar&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Initialize the image loader with a specific concurrency limit</span></span>
<span class="line"><span class="token function">initializeImageLoader</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Image loader initialized with max concurrency of 4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="registering-the-multi-frame-custom-image-loader" tabindex="-1"><a class="header-anchor" href="#registering-the-multi-frame-custom-image-loader"><span>Registering the multi-frame custom image loader</span></a></h3><p>To effectively handle multiframe DICOM images in Larvitar, it&#39;s essential to register a custom image loader. This process involves defining a loader function that can process multiframe images and then registering it with Cornerstone. This step is optional but mandatory for applications that need to support multiframe images. Here&#39;s how you can achieve this:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> registerMultiFrameImageLoader <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;larvitar&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Register the custom image loader for multiframe images</span></span>
<span class="line"><span class="token function">registerMultiFrameImageLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="initializing-the-cornestone-tools" tabindex="-1"><a class="header-anchor" href="#initializing-the-cornestone-tools"><span>Initializing the Cornestone Tools</span></a></h2><p>What is a CornerstoneTool? A CornerstoneTool is an interactive feature that enables users to perform various operations on medical images within a viewer. These tools are part of the Cornerstone ecosystem and provide functionalities like zooming, panning, measuring, and annotating images. They are essential for building interactive and dynamic medical imaging applications.</p><p>CornerstoneTools supports a wide variety of operations, such as:</p><ul><li>Navigation Tools: Zoom, pan, and scroll through images.</li><li>Annotation Tools: Add text, mark regions, and measure distances or angles.</li><li>Segmentation Tools: Isolate and highlight specific regions of interest.</li><li>Custom Tools: Extend functionality with custom, user-defined interactions.</li></ul><p>Before using CornerstoneTools, you need to initialize them by calling the initializeCSTools function. This function sets up the environment for tools, allowing you to configure their behavior (toolSettings) and appearance (toolStyle). Both parameters are optional, but providing custom configurations helps tailor the tools to your specific needs.</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> initializeCSTools <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;larvitar&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">initializeCSTools</span><span class="token punctuation">(</span>toolSettings<span class="token operator">?</span><span class="token operator">:</span> ToolSettings<span class="token punctuation">,</span> toolStyle<span class="token operator">?</span><span class="token operator">:</span> ToolStyle<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="toolsettings" tabindex="-1"><a class="header-anchor" href="#toolsettings"><span>ToolSettings</span></a></h3><table><thead><tr><th>Property</th><th>Description</th><th>Default Value</th></tr></thead><tbody><tr><td><code>mouseEnabled</code></td><td>Enables tools for mouse interactions.</td><td><code>true</code></td></tr><tr><td><code>touchEnabled</code></td><td>Enables tools for touch interactions.</td><td><code>false</code></td></tr><tr><td><code>showSVGCursors</code></td><td>Enables SVG cursors for better visualization of tools.</td><td><code>true</code></td></tr><tr><td><code>globalToolSyncEnabled</code></td><td>Synchronizes tool settings across all viewports.</td><td><code>true</code></td></tr><tr><td><code>autoResizeViewports</code></td><td>Automatically resizes viewports when the browser window changes.</td><td><code>true</code></td></tr><tr><td><code>lineDash</code></td><td>Defines the dash pattern for line tools (e.g., <code>[4, 4]</code>).</td><td><code>[4, 4]</code></td></tr></tbody></table><hr><h3 id="toolstyle" tabindex="-1"><a class="header-anchor" href="#toolstyle"><span>ToolStyle</span></a></h3><table><thead><tr><th>Property</th><th>Description</th><th>Default Value</th></tr></thead><tbody><tr><td><code>width</code></td><td>Stroke width for tools (e.g., lines, circles).</td><td><code>1</code></td></tr><tr><td><code>color</code></td><td>Default color for tools.</td><td><code>&quot;#00FF00&quot;</code></td></tr><tr><td><code>activeColor</code></td><td>Color for active tools (e.g., when selected).</td><td><code>&quot;#FF0000&quot;</code></td></tr><tr><td><code>fillColor</code></td><td>Fill color for shapes like circles.</td><td><code>&quot;#0000FF&quot;</code></td></tr><tr><td><code>fontFamily</code></td><td>Font family for text annotations.</td><td><code>&quot;Arial&quot;</code></td></tr><tr><td><code>fontSize</code></td><td>Font size for text annotations.</td><td><code>12</code></td></tr><tr><td><code>backgroundColor</code></td><td>Background color for text annotations.</td><td><code>&quot;rgba(0, 0, 0, 0.5)&quot;</code></td></tr></tbody></table><h2 id="initializing-the-larvitar-store" tabindex="-1"><a class="header-anchor" href="#initializing-the-larvitar-store"><span>Initializing the Larvitar store</span></a></h2>`,25)),o("p",null,[e[1]||(e[1]=t("The ")),l(a,{to:"/api/modules/store.html"},{default:r(()=>e[0]||(e[0]=[t("Larvitar Store")])),_:1}),e[2]||(e[2]=t(" is a centralized data configuration store that manages the state and settings required for the application. It keeps track of information related to tools, series, viewports, and other imaging-related data, enabling dynamic interaction with the viewer."))]),e[4]||(e[4]=n(`<p>The store must be initialized before use:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> store <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;larvitar&#39;</span><span class="token punctuation">;</span></span>
<span class="line">store<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><br></p><div style="text-align:center;"><img src="https://press.r1-it.storage.cloud.it/logo_trasparent.png" alt="D/Vision Lab" height="200"></div>`,4))])}const g=i(p,[["render",u],["__file","initializing.html.vue"]]),f=JSON.parse('{"path":"/api/initializing.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Initializing the Image Loader(s)","slug":"initializing-the-image-loader-s","link":"#initializing-the-image-loader-s","children":[{"level":3,"title":"Initialization Function","slug":"initialization-function","link":"#initialization-function","children":[]},{"level":3,"title":"Example Initialization","slug":"example-initialization","link":"#example-initialization","children":[]},{"level":3,"title":"Registering the multi-frame custom image loader","slug":"registering-the-multi-frame-custom-image-loader","link":"#registering-the-multi-frame-custom-image-loader","children":[]}]},{"level":2,"title":"Initializing the Cornestone Tools","slug":"initializing-the-cornestone-tools","link":"#initializing-the-cornestone-tools","children":[{"level":3,"title":"ToolSettings","slug":"toolsettings","link":"#toolsettings","children":[]},{"level":3,"title":"ToolStyle","slug":"toolstyle","link":"#toolstyle","children":[]}]},{"level":2,"title":"Initializing the Larvitar store","slug":"initializing-the-larvitar-store","link":"#initializing-the-larvitar-store","children":[]}],"git":{"updatedTime":1759672351000,"contributors":[{"name":"Laura Borghesi","username":"Laura Borghesi","email":"146220917+laura-borghesi-lum00n@users.noreply.github.com","commits":1,"url":"https://github.com/Laura Borghesi"}]},"filePathRelative":"api/initializing.md","excerpt":"<div style=\\"text-align: center;\\">\\n    <img src=\\"https://assets.pokemon.com/assets/cms2/img/pokedex/full/246.png\\" alt=\\"Larvitar\\" height=\\"200\\">\\n</div>\\n<h2>Initializing the Image Loader(s)</h2>\\n<p>Before loading and rendering DICOM images, you must initialize the image loader using the <code>initializeImageLoader</code> function. This function configures the <strong>DICOMImageLoader</strong>, allowing you to specify parameters such as the maximum concurrency for decoding operations, which controls how many tasks can run simultaneously.</p>"}');export{g as comp,f as data};
