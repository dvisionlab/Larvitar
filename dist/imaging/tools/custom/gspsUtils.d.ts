import { AnnotationDetails, CompoundDetails, GraphicDetails, ViewportComplete, TextDetails, AnnotationOverlay } from "../types";
import { Image, Viewport } from "cornerstone-core";
import { LarvitarManager, MetaData, Series } from "../../types";
import { MetaDataTypes } from "../../MetaDataTypes";
export declare function applySoftcopyLUT(metadata: MetaData, viewport: Viewport): void;
export declare function applyModalityLUT(metadata: MetaData, image: Image, viewport: Viewport): void;
export declare function applySoftcopyPresentationLUT(metadata: MetaData, viewport: Viewport): void;
export declare function setLUT(voiLut: MetaDataTypes, viewport: Viewport): void;
export declare function applyZoomPan(metadata: MetaData, viewport: ViewportComplete): void;
export declare function applySpatialTransformation(metadata: MetaData, element: HTMLElement, viewport: ViewportComplete): void;
export declare function applyMask(serie: Series, element: HTMLElement): void;
export declare function applyDisplayShutter(metadata: MetaData, element: HTMLElement, image: Image): void;
export declare function setPixelData(pixelData: number[]): () => number[];
export declare function retrieveOverlayToolData(metadata: MetaData, toolAnnotations: AnnotationOverlay[], graphicGroups?: MetaDataTypes[]): void;
export declare function retrieveAnnotationsToolData(metadata: MetaData, image: Image, toolAnnotations: AnnotationOverlay[], canvas: HTMLCanvasElement | null, graphicLayers?: MetaDataTypes[], graphicGroups?: MetaDataTypes[]): void;
export declare function retrieveTextObjectDetails(textObject: MetaDataTypes): TextDetails;
export declare function retrieveGraphicObjectDetails(graphicObject: MetaDataTypes): GraphicDetails;
export declare function retrieveCompoundObjectDetails(compoundObject: MetaDataTypes): CompoundDetails;
export declare function findGraphicLayer(annotationID?: string, graphicLayers?: any): any;
export declare function handleTextAnnotation(annotation: AnnotationDetails, textObject: TextDetails, toolAnnotations: AnnotationOverlay[], canvas: HTMLCanvasElement | null): void;
export declare function handleGraphicAnnotation(annotation: AnnotationDetails, graphicObject: GraphicDetails, toolAnnotations: AnnotationOverlay[], canvas: HTMLCanvasElement | null): void;
export declare function setToolAnnotationsAndOverlays(newData: AnnotationOverlay, toolAnnotations: AnnotationOverlay[]): void;
export declare function convertCIELabToRGB(lab: [number, number, number]): number[];
export declare function retrieveLarvitarManager(imageId: string): {
    manager: LarvitarManager;
    seriesId: string;
};
export declare function handleElement(element: HTMLElement): Promise<any>;
